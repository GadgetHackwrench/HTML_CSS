	=	DAY 1	=

Text editor (notepad, for ex)
Should be saved as '*.html' to be rendered as a web-page
the default page is traditionally called 'index'

HTML = structured mark up

1 step - specify a doctype [= what version of mark up language is being used]:
<!doctype html>
2 step - specify where html is:
<html>
...
</html>
3 step - provide a couple of details about a page itself:
+ head section of a page:
<head></head>
--- inside the head-section ---
specify the title of a page:
<title></title>
specify the character type:
<meta charset="utf-8" />
<tag atribute=value>
if there's never gonna be a text meant to be placed between the tags, it is common to "self-close" the tag: <meta />

+ the body of a page is wrapped into the tag
<body></body>


	=	DAY 2	Formatting	=

It is a good practice when you are creating html pages to explicitly specify what your content is. (Html is "describing content")

Browsers have default styling. That's how they know how much is <h1> element, margins.

(Bold:)
<h1></h1> = heading level 1
<p></p> = a paragraph
<em></em> = emphasis
<i></i> = italic
<strong></strong> = traditionally is used to make the text bold
<b></b>


	=	DAY 3	Lists	=

<br> or </br> = is a break

We specify the list by typing "ul" for an unordered list and "ol" for ordered list:
<ul>
	<li>...</li>
	<li>...</li>
	<li>...</li>
</ul>
where "li" is list item.

[sublime] alt + f3 = find and replace

"definition list":
<dl>
	<dt>="definition term</dt>
	<dd>="definition details?.."</dd>
</dl>


	=	DAY 4	Parent-child relationships	=

<html>
	<head>
		
	</head>
	<body>
		<h1>
			<span>decendant of "html", "body", "h1"</span>
		</h1>
		<p>
			sibling of "h1"
			<strong></strong>
		</p>
	</body>
</html>


	=	DAY 5	Headings	=

6 levels: h1, h2, ..., h6
in terms of importance
 

	=	DAY 6	Blockquotes	=

To quote somebody:
<blockquote> ... </blockquote>


	=	DAY 7	Anchors	=

Allow us to connect one page to another.
<a> </a> - alone will not work. Needs a specific attribute "href".
<a href="www.some-site.com" target="_blank"> ... </a> - 
"_blank" = link will be opened in a new tab.

A static site - a website that is not using a db; it's not determining content dynamically; every bit is coded using a simple mark up and we are not using any kind of serverside language.

to go into directory:
"directoryName/page-name.html"
to go up a directory:
"../page-name.html"


	=	DAY 8	Your first stylesheet	=

Long time ago...
attribute called "style" - will work on any of the elements that go within the body
<'some tag' style="statement"> ... </'some tag'>
statement is of this kind: name1: value1; name2: value2; ...
for color-tag there are several possible values:
the color name itself; rgb(100, 200, 50); or a hex-value #e3e3e3.

There should be separation between styling and marking up, or the code will become very messy shortly.
It's better to create a stylesheet.

inside css:
a {
	#some code...
}
means: find all anchor tags (any element that has a name of "a"), then execute anything within the {}


	=	DAY 9	Clean project stryctures	=

It is considered a best practice to always divide your images, css, javascript into their own folders.
[ css ]
[ img ]
[ js ]


	=	DAY 10	Images	=

<img src=""/> tag.

Best practice - to provide an alternate text (in case the image is not available or images are turned off)
alt=""


	=	DAY 11	The necessity of divs	=

Css tag 'margins' - allows us to provide some spacing
Can be placed inside specific css blocks, like:
a {
	margins = 50px;
}
h1 {
	margins = 50 px;
}

OR
Can be placed inside unioned css block, like:
a, h1 {
	margins = 50px;
}
But this approach has some disadvantages. What if I don't want all my links to have margins?
It is customary to wrap related material within something called a "div". 
"Div" is a way to position a content; they don't describe the content, they don't style the content.
div ~ bucket